% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpda.R
\name{logLik_pw}
\alias{logLik_pw}
\title{Point-wise Probability Density Approximation}
\usage{
logLik_pw(y, yhat, h = NA, m = 0.8, parallel = FALSE)
}
\arguments{
\item{y}{a vector storing empirical data (e.g., RTs)}

\item{yhat}{a vector storing simulated data}

\item{h}{kernel bandwidth. Default value is 0.8 times Silverman's Rule of
Thumb, based on simulated data (i.e., yhat).}

\item{m}{a bandwidth multiplier. Default is 0.8.}

\item{parallel}{a switch for parallel processing via OMP. Default is FALSE.}
}
\value{
a vector storing log-likelihood for each data point
}
\description{
\code{logLik_pw} takes individual data points as inputs sequentially
(or in parallel via Open MP) to a gaussian kernel to calculate directly.
}
\examples{
#########################
## Example 1           ##
#########################
## Test whether logLik_pw match dnorm(0, log=TRUE)
rm(list=ls())
cpda::logLik_pw(0, rnorm(1e6)) ## -0.9228587
dnorm(0, log=TRUE)             ## -0.9189385

h <- 0.8*bw.nrd0(rnorm(1e6));            ## h==0.04541785          
cpda::logLik_pw(0, rnorm(1e6), h=h)      ## -0.9196711
cpda::logLik_pw(0, rnorm(1e6), h=h, m=1) ## -0.9181807

#########################
## Example 2           ##
#########################
## Demo how to use logLik_pw to get pLBA likelihoods 
library(cpda); data(lba)
str(plba)
## List of 4
## $ DT1 : num [1:695] 0.488 0.801 0.376 0.507 0.532 ...
## $ DT2 : num [1:305] 0.538 0.77 0.568 0.271 0.881 ...
## $ eDT1: num [1:7020] 0.475 0.346 0.42 0.401 0.368 ...
## $ eDT2: num [1:2980] 0.703 0.693 0.704 0.462 0.468 ...

## Use pointwise pda to get likelihoods for each data point
## This algorithm calculates via a standard gaussian kernel directly
## (1) First argument, plba$DT1, is the data.
## (2) Second argument, plba$eDT1, is the simulation.
## (3) The outputs are log-likelihoods. 

outputs <- logLik_pw(plba$DT1, plba$eDT1)
sum(outputs) ## Get summed, logged likelihood, 278.6095

#########################
## Example 3           ##
#########################
rm(list=ls())
x <- seq(-3, 3, length.out=100) ## Data
samp <- rnorm(1e6)
h <- 0.8*stats::bw.nrd0(samp); h          ## Define bin
system.time(pw1  <- logLik_pw(x, samp))
system.time(pw2  <- logLik_pw(x, samp, h=h, m=0.8))
system.time(pw3  <- logLik_pw(x, samp, h=h, m=1))

plot(x, pw1,type="l", lty="dotted")
lines(x, pw2, col="darkgreen", lty="dashed")
lines(x, pw3, col="blue", lty="dotdash")
lines(x, dnorm(x, log=TRUE), col="red")

}

