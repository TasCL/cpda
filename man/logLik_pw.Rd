% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpda.R
\name{logLik_pw}
\alias{logLik_pw}
\title{Point-wise Probability Density Approximation}
\usage{
logLik_pw(y, yhat, h = NA, pointwise = TRUE)
}
\arguments{
\item{y}{a vector storing empirical data (e.g., RTs)}

\item{yhat}{a vector storing simulated data (e.g., simualted RTs, using a 
LBA model).}

\item{h}{kernel bandwidth. By default 0.8 times Silverman's Rule of Thumb 
Bandwidth}

\item{pointwise}{a boolean switch to turn off pointwise calculation. Should
always keep it TRUE.}
}
\value{
Log-likelihood
}
\description{
Instead of using KDE-FFT, \code{logLik_pw} takes individual data point and 
feeds them into gaussian kernel to get probability density directly.
}
\examples{
library(cpda); data(lba)
## data.table::data.table(d)
str(plba)
## List of 4
## $ DT1 : num [1:695] 0.488 0.801 0.376 0.507 0.532 ...
## $ DT2 : num [1:305] 0.538 0.77 0.568 0.271 0.881 ...
## $ eDT1: num [1:7020] 0.475 0.346 0.42 0.401 0.368 ...
## $ eDT2: num [1:2980] 0.703 0.693 0.704 0.462 0.468 ...

## Use piecewise pda logLik to get likelihood for each data point
## This algorithm calculates gaussian kernel directly
## (1) First argument, plba$DT1, is the data.
## (2) Second argument, plba$eDT1, is the simulation.
## (3) The outputs are likelihoods (not log yet) for each data point

outputs <- logLik_pw(plba$DT1, plba$eDT1)
str(outputs)
sum(outputs)
sum(log(outputs))  ## 278.6095

}

