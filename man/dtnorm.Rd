% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/distributions.R
\name{rtnorm}
\alias{rtnorm}
\alias{dtnorm}
\alias{ptnorm}
\title{Truncated Normal Distribution}
\usage{
rtnorm(n, mean, sd, lower, upper)

dtnorm(x, mean = 0, sd = 1, lower = -Inf, upper = Inf, log = FALSE)

ptnorm(x, mean = 0, sd = 1, lower = -Inf, upper = Inf,
  lower.tail = TRUE, log.p = FALSE)
}
\arguments{
\item{n}{number of observations. n must be a scalar.}

\item{mean}{mean (must be scalar).}

\item{sd}{standard deviation (must be scalar).}

\item{lower}{lower truncation value (must be scalar).}

\item{upper}{upper truncation value (must be scalar).}

\item{x, q}{vector of quantiles;}

\item{lt}{lower tail. If TRUE (default) probabilities are \code{P[X <= x]},
otherwise, \code{P[X > x]}.}

\item{lp}{log probability. If TRUE (default is FALSE) probabilities p are
given as \code{log(p)}.}
}
\value{
a column vector.
}
\description{
Random number generation, probability density and cumulative density
functions for truncated normal distribution.
}
\examples{
## rtn example
dat1 <- rtnorm(1e5, 0, 1, 0, Inf)
## dat2 <- msm::rtnorm(n, mean, sd, lower, upper)
## den2 <- density(dat2)
hist(dat1, breaks="fd", freq=F)
## lines(den2$x, den2$y, lwd=2.5)
## res <- microbenchmark(
##     rtn(n, mean, sd, lower, upper),
##     msm::rtnorm(n, mean, sd, lower, upper))
## print(res)

## dtn example
x <- seq(-5, 5, length.out=1e3)
dat1 <- dtnorm(x, 0, 1, -2, 2, 0)
## dat2 <- msm::dtnorm(x, mean, sd, lower, upper, 0)
plot(x, dat1, type="l", lwd=2)
## lines(x, dat2, lwd=2, lty="dashed", col="red")

## res <- microbenchmark(
##     dtnorm(x, mean, sd, lower, upper, 0),
##     msm::dtnorm(x, mean, sd, lower, upper, 0))
## print(res)

## ptn example
x <- seq(-50, 10, length.out=1e3)
mean <- 0
sd <- 1
lower <- 0
upper <- 5
dat1 <- ptnorm(x, 0, 1, 0, 5, lp=TRUE)
## dat2 <- msm::ptnorm(x, mean, sd, lower, upper, log.p=TRUE)
## all(dat1[,1] == dat2)

plot(x, log(dat1[,1]))
## lines(x, log(dat2), col="red", lwd=2)
## mtext("pnorm(x, log=TRUE)", adj = 0)
## mtext("log(pnorm(x))", col = "red", adj = 1)
}
