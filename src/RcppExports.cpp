// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// logLik_prior
double logLik_prior(arma::vec pVec);
RcppExport SEXP cpda_logLik_prior(SEXP pVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pVec(pVecSEXP);
    rcpp_result_gen = Rcpp::wrap(logLik_prior(pVec));
    return rcpp_result_gen;
END_RCPP
}
// logLik_prior_test
double logLik_prior_test(arma::vec pVec);
RcppExport SEXP cpda_logLik_prior_test(SEXP pVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pVec(pVecSEXP);
    rcpp_result_gen = Rcpp::wrap(logLik_prior_test(pVec));
    return rcpp_result_gen;
END_RCPP
}
// gammavec
arma::vec gammavec(int npar, double gammamult);
RcppExport SEXP cpda_gammavec(SEXP nparSEXP, SEXP gammamultSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type npar(nparSEXP);
    Rcpp::traits::input_parameter< double >::type gammamult(gammamultSEXP);
    rcpp_result_gen = Rcpp::wrap(gammavec(npar, gammamult));
    return rcpp_result_gen;
END_RCPP
}
// pickchains
arma::vec pickchains(int k, int n, std::vector<int> chains);
RcppExport SEXP cpda_pickchains(SEXP kSEXP, SEXP nSEXP, SEXP chainsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type chains(chainsSEXP);
    rcpp_result_gen = Rcpp::wrap(pickchains(k, n, chains));
    return rcpp_result_gen;
END_RCPP
}
// crossover
arma::mat crossover(arma::mat theta, double gammamult, double rp);
RcppExport SEXP cpda_crossover(SEXP thetaSEXP, SEXP gammamultSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type gammamult(gammamultSEXP);
    Rcpp::traits::input_parameter< double >::type rp(rpSEXP);
    rcpp_result_gen = Rcpp::wrap(crossover(theta, gammamult, rp));
    return rcpp_result_gen;
END_RCPP
}
// getsubchains
arma::vec getsubchains(int nchain);
RcppExport SEXP cpda_getsubchains(SEXP nchainSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nchain(nchainSEXP);
    rcpp_result_gen = Rcpp::wrap(getsubchains(nchain));
    return rcpp_result_gen;
END_RCPP
}
// migration
arma::mat migration(arma::mat theta, double gammamult, double rp);
RcppExport SEXP cpda_migration(SEXP thetaSEXP, SEXP gammamultSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type gammamult(gammamultSEXP);
    Rcpp::traits::input_parameter< double >::type rp(rpSEXP);
    rcpp_result_gen = Rcpp::wrap(migration(theta, gammamult, rp));
    return rcpp_result_gen;
END_RCPP
}
// lik_fft
arma::vec lik_fft(arma::vec y, arma::vec yhat, double h, double m, double p, int n);
RcppExport SEXP cpda_lik_fft(SEXP ySEXP, SEXP yhatSEXP, SEXP hSEXP, SEXP mSEXP, SEXP pSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yhat(yhatSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_fft(y, yhat, h, m, p, n));
    return rcpp_result_gen;
END_RCPP
}
// lik_pw
arma::vec lik_pw(arma::vec y, arma::vec yhat, double h, double m, int n);
RcppExport SEXP cpda_lik_pw(SEXP ySEXP, SEXP yhatSEXP, SEXP hSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yhat(yhatSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_pw(y, yhat, h, m, n));
    return rcpp_result_gen;
END_RCPP
}
// n1PDF
arma::vec n1PDF(arma::vec x, int nsim, double b, double A, arma::vec mean_v, arma::vec sd_v, double t0, double k);
RcppExport SEXP cpda_n1PDF(SEXP xSEXP, SEXP nsimSEXP, SEXP bSEXP, SEXP ASEXP, SEXP mean_vSEXP, SEXP sd_vSEXP, SEXP t0SEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mean_v(mean_vSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sd_v(sd_vSEXP);
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(n1PDF(x, nsim, b, A, mean_v, sd_v, t0, k));
    return rcpp_result_gen;
END_RCPP
}
// timesTwo
Rcpp::NumericVector timesTwo(Rcpp::NumericVector x);
RcppExport SEXP cpda_timesTwo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x));
    return rcpp_result_gen;
END_RCPP
}
// dtn
arma::vec dtn(arma::vec x, double mean, double sd, double lower, double upper, int lp);
RcppExport SEXP cpda_dtn(SEXP xSEXP, SEXP meanSEXP, SEXP sdSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP lpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type lp(lpSEXP);
    rcpp_result_gen = Rcpp::wrap(dtn(x, mean, sd, lower, upper, lp));
    return rcpp_result_gen;
END_RCPP
}
// rtn
arma::vec rtn(int n, arma::vec mean, arma::vec sd, arma::vec lower, arma::vec upper);
RcppExport SEXP cpda_rtn(SEXP nSEXP, SEXP meanSEXP, SEXP sdSEXP, SEXP lowerSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(rtn(n, mean, sd, lower, upper));
    return rcpp_result_gen;
END_RCPP
}
// ptn
arma::vec ptn(arma::vec q, double mean, double sd, double lower, double upper, int lt, int lp);
RcppExport SEXP cpda_ptn(SEXP qSEXP, SEXP meanSEXP, SEXP sdSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP ltSEXP, SEXP lpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type lt(ltSEXP);
    Rcpp::traits::input_parameter< int >::type lp(lpSEXP);
    rcpp_result_gen = Rcpp::wrap(ptn(q, mean, sd, lower, upper, lt, lp));
    return rcpp_result_gen;
END_RCPP
}
// rlba
arma::mat rlba(int n, double b, double A, arma::vec mean_v, arma::vec sd_v, double t0);
RcppExport SEXP cpda_rlba(SEXP nSEXP, SEXP bSEXP, SEXP ASEXP, SEXP mean_vSEXP, SEXP sd_vSEXP, SEXP t0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mean_v(mean_vSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sd_v(sd_vSEXP);
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    rcpp_result_gen = Rcpp::wrap(rlba(n, b, A, mean_v, sd_v, t0));
    return rcpp_result_gen;
END_RCPP
}
// rlba_n1
arma::vec rlba_n1(int n, double b, double A, arma::vec mean_v, arma::vec sd_v, double t0);
RcppExport SEXP cpda_rlba_n1(SEXP nSEXP, SEXP bSEXP, SEXP ASEXP, SEXP mean_vSEXP, SEXP sd_vSEXP, SEXP t0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mean_v(mean_vSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sd_v(sd_vSEXP);
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    rcpp_result_gen = Rcpp::wrap(rlba_n1(n, b, A, mean_v, sd_v, t0));
    return rcpp_result_gen;
END_RCPP
}
// cquantile
double cquantile(arma::vec y, double q);
RcppExport SEXP cpda_cquantile(SEXP ySEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(cquantile(y, q));
    return rcpp_result_gen;
END_RCPP
}
// bwNRD0
double bwNRD0(arma::vec y, double m);
RcppExport SEXP cpda_bwNRD0(SEXP ySEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(bwNRD0(y, m));
    return rcpp_result_gen;
END_RCPP
}
// histc
arma::uvec histc(arma::vec x, arma::vec edge);
RcppExport SEXP cpda_histc(SEXP xSEXP, SEXP edgeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type edge(edgeSEXP);
    rcpp_result_gen = Rcpp::wrap(histc(x, edge));
    return rcpp_result_gen;
END_RCPP
}
// histd
arma::vec histd(arma::vec yhat, arma::vec z, int n);
RcppExport SEXP cpda_histd(SEXP yhatSEXP, SEXP zSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type yhat(yhatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(histd(yhat, z, n));
    return rcpp_result_gen;
END_RCPP
}
// getEdges
arma::vec getEdges(arma::vec z);
RcppExport SEXP cpda_getEdges(SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(getEdges(z));
    return rcpp_result_gen;
END_RCPP
}
// getFilter
arma::vec getFilter(double m, double M, double h, double p);
RcppExport SEXP cpda_getFilter(SEXP mSEXP, SEXP MSEXP, SEXP hSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type M(MSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(getFilter(m, M, h, p));
    return rcpp_result_gen;
END_RCPP
}
